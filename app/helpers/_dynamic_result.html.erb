<center>
  <table id="dynamic_result_table" style="text-align: center">
    <% if result.first %>
    <tr>
      <%= result.first.attributes.map { |k, _| "<th>#{k}</th>" }.join.html_safe %>
    </tr>
    <% end %>
    <% result.each do |patient| %>
    <tr>
      <%= patient.attributes.map { |_, v| "<td>#{v}</td>" }.join.html_safe %>
    </tr>
    <% end if result %>
  </table>
  
  <button id="table2csv">Download CSV</button>
  
  <script>
    $( function() {
      if ( sessionStorage.getItem( 'toggle_columns' ) == null ) {
        sessionStorage.setItem( 'toggle_columns', '[]' )
      }
      console.log( sessionStorage.getItem( 'toggle_columns' ) );
      var hide_ary = jQuery.parseJSON( sessionStorage.getItem( 'toggle_columns' ) );
      
      $.each( hide_ary, function(index, value) {
        var header = $("#dynamic_result_table tr > th:eq(" + value + ")");
        header.attr( 'title', header.text() );
        header.text( '●' );
        $('#dynamic_result_table tr').find( "td:eq(" + value +")" ).each( function() {
          $( this ).attr( 'title', $( this ).text() );
          $( this ).text( '' );
        });
      });
      
      $( '#dynamic_result_table th' ).each( function(index) {
        $( this ).on( 'click', function() {
          var header = $("#dynamic_result_table tr > th:eq(" + index + ")");
          if ( header.text() == '●' ) {
            var hide_ary = jQuery.parseJSON( sessionStorage.getItem( 'toggle_columns' ) );
            hide_ary.splice( hide_ary.indexOf(index), 1 );
            sessionStorage.setItem( 'toggle_columns', JSON.stringify( hide_ary ) )
            
            header.text( header.attr( 'title' ) );
            header.attr( 'title', '' );
            $('#dynamic_result_table tr').find( "td:eq(" + index +")" ).each( function() {
              $( this ).text( $( this ).attr( 'title' ) );
              $( this ).attr( 'title', '' );
            });
          } else {
            var hide_ary = jQuery.parseJSON( sessionStorage.getItem( 'toggle_columns' ) );
            hide_ary.push( index );
            sessionStorage.setItem( 'toggle_columns', JSON.stringify( hide_ary ) )
            
            header.attr( 'title', header.text() );
            header.text( '●' );
            $('#dynamic_result_table tr').find( "td:eq(" + index +")" ).each( function() {
              $( this ).attr( 'title', $( this ).text() );
              $( this ).text( '' );
            });
          }
        });
      });
    });
  
    var regulateCSVCell = function( cell ) {
      if ( cell.indexOf( ',' ) == -1 ) {
        return cell;
      }
      return '"' + cell + '"';
    };
  
    var ary2CSV = function( ary ) {
      csv = '';
      for( var row in ary ) {
        for( var col in ary[row] ) {
          if ( col == 0 ) {
            csv += regulateCSVCell( ary[row][col] )
          } else {
            csv += ',' + regulateCSVCell( ary[row][col] )
          }
        }
        csv += "\n"
      }
      return csv;
    };
    
    var saveCSV = function( csv ) {
      var href = 'data:application/csv;charset=utf-8,'
      href += encodeURIComponent( csv );
      window.open( href );
    };
  
    $( '#table2csv' ).on( 'click', function() {
      var hide_ary = jQuery.parseJSON( sessionStorage.getItem( 'toggle_columns' ) );
      var table = [];
      $( '#dynamic_result_table tr' ).each( function( index ) {
        var row = [];
        $( this ).children().each( function( index ) {
          if ( $.inArray( index, hide_ary ) == -1 ) {
            row.push( $( this ).text() );
          }
        });
        table.push( row );
      });
      
      saveCSV( ary2CSV( table ) );
    });
  </script>
</center>
